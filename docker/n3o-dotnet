########################
### base
########################
FROM mcr.microsoft.com/dotnet/aspnet:9.0-noble AS base

WORKDIR /app

########################
### build
########################
FROM mcr.microsoft.com/dotnet/sdk:9.0-noble AS build

ARG FEED_URL
ARG PAT
ARG PROJECT
ARG CONFIGURATION

WORKDIR /src

ENV NUGET_CREDENTIALPROVIDER_SESSIONTOKENCACHE_ENABLED true
ENV VSS_NUGET_EXTERNAL_FEED_ENDPOINTS {\"endpointCredentials\": [{\"endpoint\":\"${FEED_URL}\", \"username\":\"n3oltd\", \"password\":\"${PAT}\"}]}
ENV PROJECT=${PROJECT}
ENV DLL=.dll

COPY . .
WORKDIR "/src/${PROJECT}"

RUN apt-get update
RUN dotnet nuget update source n3oltd -u n3oltd -p ${PAT} --store-password-in-clear-text
RUN dotnet build -c "${CONFIGURATION}" -o /app
RUN rm -f /app/appsettings.json

########################
### publish
########################
FROM build AS publish

ARG PROJECT

RUN dotnet publish "${PROJECT}.csproj" -c "${CONFIGURATION}" -o /app

########################
### final
########################
FROM base AS final

ARG PROJECT

#to remove - ubuntu archive hosting issue
RUN sed -i 's|http://|https://|g' /etc/apt/sources.list.d/ubuntu.sources || true 

RUN apt-get update

RUN mkdir -p /dotnet-tools

RUN curl -Lo /dotnet-tools/dotnet-trace https://aka.ms/dotnet-trace/linux-x64 && \
    curl -Lo /dotnet-tools/dotnet-dump https://aka.ms/dotnet-dump/linux-x64 && \
    curl -Lo /dotnet-tools/dotnet-gcdump https://aka.ms/dotnet-gcdump/linux-x64 && \
    curl -Lo /dotnet-tools/dotnet-counters https://aka.ms/dotnet-counters/linux-x64

RUN chmod +x /dotnet-tools/dotnet-*

ENV PATH="/dotnet-tools:$PATH"

RUN apt-get --yes install zip unzip curl
RUN apt-get --yes install libgdiplus

WORKDIR /app
ENV ASPNETCORE_URLS http://*:80
COPY --from=publish /app .
ENV DLL="${PROJECT}.dll"
RUN echo "#!/bin/sh\ndotnet ${DLL}" > ./entrypoint.sh
RUN chmod +x ./entrypoint.sh

# Below currently needed by TextMarketer API
RUN sed -i '/\[openssl_init\]/a ssl_conf = ssl_sect' /etc/ssl/openssl.cnf
RUN printf "\n[ssl_sect]\nsystem_default = system_default_sect\n" >> /etc/ssl/openssl.cnf
RUN printf "\n[system_default_sect]\nMinProtocol = TLSv1.2\nCipherString = DEFAULT@SECLEVEL=0" >> /etc/ssl/openssl.cnf
RUN printf "\nOptions = UnsafeLegacyRenegotiation" >> /etc/ssl/openssl.cnf

RUN hash -r

ENTRYPOINT ["./entrypoint.sh"]

EXPOSE 80
