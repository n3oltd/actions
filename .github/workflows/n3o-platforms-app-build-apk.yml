name: 'Build Platforms App APK'

on:
  workflow_call:
    inputs:
      subscription-code:
        type: string
        required: true
        
env:
  GH_PAT: ${{ secrets.GH_PACKAGES_TOKEN }}
  
jobs:
  build-apk:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch configuration.json
        run: |
          wget -O configuration.json "https://cdn.n3o.cloud/connect-${{ inputs.subscription-code }}/build/configuration.json"

      - name: Download assets
        run: |
          CONFIG_URL="https://cdn.n3o.cloud/connect-${{ inputs.subscription-code }}/build/configuration.json"
          CONFIG_FILE="configuration.json"
          wget -O $CONFIG_FILE $CONFIG_URL
          
          urls=$(jq -r '.theme.mobileApp | to_entries[] | "\(.value.url) \(.value.filename)"' $CONFIG_FILE)

          for entry in $urls; do
            url=$(echo $entry | awk '{print $1}')
            fname=$(echo $entry | awk '{print $2}')
            wget -O "apps/platforms-app/assets/$fname" "$url"
          done

          ICON_BG=$(jq -r '.theme.colors.iconBackgroundColor' $CONFIG_FILE)
          ICON_BG_DARK=$(jq -r '.theme.colors.iconBackgroundColorDark' $CONFIG_FILE)
          SPLASH_BG=$(jq -r '.theme.colors.splashBackgroundColor' $CONFIG_FILE)
          SPLASH_BG_DARK=$(jq -r '.theme.colors.splashBackgroundColorDark' $CONFIG_FILE)
          
          echo "ICON_BG=$ICON_BG" >> $GITHUB_ENV
          echo "ICON_BG_DARK=$ICON_BG_DARK" >> $GITHUB_ENV
          echo "SPLASH_BG=$SPLASH_BG" >> $GITHUB_ENV
          echo "SPLASH_BG_DARK=$SPLASH_BG_DARK" >> $GITHUB_ENV
          
      - name: Set environment variables
        id: setenv
        run: |
          APP_NAME=$(jq -r '.app.appName' configuration.json)
          PACKAGE_NAME=$(jq -r '.app.packageName' configuration.json)
          VERSION_NAME=$(date +"%Y.%m.%d")-${{ github.run_number }}
          CI_BUILD_NUMBER=${{ github.run_number }}
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "CI_BUILD_NUMBER=$CI_BUILD_NUMBER" >> $GITHUB_ENV
      
      - name: npm install and build
        run: |
          npm clean-install
          npm run build    
          
      - name: Sync capacitor plugins
        run: |
          npx trapeze run config.yml -y
          npx cap sync
          npx @capacitor-assets generate \
            --iconBackgroundColor "${ICON_BG}" \
            --iconBackgroundColorDark "${ICON_BG_DARK}" \
            --splashBackgroundColor "${SPLASH_BG}" \
            --splashBackgroundColorDark "${SPLASH_BG_DARK}"
        working-directory: apps/platforms-app
        
      - name: Build Android APK
        uses: n3oltd/actions/.github/actions/n3o-build-apk@main
        with:
          working-directory: apps/platforms-app
          android-keystore-base64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          android-key-alias: ${{ secrets.ANDROID_KEY_ALIAS }}
          android-keystore-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: platforms-app-${{ inputs.subscription-code }}
          path: apps/platforms-app/android/app/build/outputs/apk/release/app-*.apk