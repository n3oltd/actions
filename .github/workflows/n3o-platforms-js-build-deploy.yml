name: 'Build & Deploy Platforms JS'

on:
  workflow_call:
    inputs:
      subscription-code:
        type: string
        required: true
      environment:
        type: string
        required: true

env:
  GH_PAT: ${{ secrets.GH_PACKAGES_TOKEN }}

jobs:
  job1:
    name: ubuntu-latest

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          registry-url: 'https://npm.pkg.github.com'
          token: ${{ env.GH_PAT }}

      - name: Fetch configuration.json (Production)
        if: ${{ inputs.environment == 'prod' }}
        uses: wei/wget@v1
        with:
          args: -O configuration.json https://cdn.n3o.cloud/connect-${{ inputs.subscription-code }}/build/configuration.json

      - name: Fetch configuration.json (QA)
        if: ${{ inputs.environment == 'qa' }}
        uses: wei/wget@v1
        with:
          args: -O configuration.json https://cdn-beta.n3o.cloud/connect-${{ inputs.subscription-code }}/build/configuration.json

      - name: npm install and build
        run: |
          npm install --legacy-peer-deps
          npm run build:lib
        env:
          NODE_AUTH_TOKEN: ${{ env.GH_PAT }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds:  ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Storage Connection String
        run: |
          if [ "${{ inputs.environment }}" = "prod" ]; then
            echo "storage_connection_string=${{ secrets.AZURE_STORAGE_ELEMENTS_CONNECTION_STRING_PROD }}" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" = "qa" ]; then
            echo "storage_connection_string=${{ secrets.AZURE_STORAGE_ELEMENTS_CONNECTION_STRING_QA }}" >> $GITHUB_ENV
          else
            echo "Invalid environment: ${{ inputs.environment }}"
            exit 1
          fi

      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          azcliversion: 2.66.0
          inlineScript: |
            az storage blob upload-batch --connection-string="${{ env.storage_connection_string }}" --destination="connect-${{ env.subscription_code }}" --source="dist/platforms" --destination-path="platforms/js" --overwrite="true"
        env:
          VITE_SUBSCRIPTION_CODE: "${{ inputs.subscription-code }}"
